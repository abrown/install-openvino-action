name: 'Install OpenVINO'
description: 'Install OpenVINO binaries from a package repository; this is significantly faster than
building from source'

# See https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
inputs:
  version:
    description: 'The release version of OpenVINO to install'
    required: true
    default: '2023.0.0'
  os:
    description: 'Auto-detected, only use this to override the OS. One of: linux, macos, windows.'
  release:
    description: 'Auto-detected, only use to override the release distribution. For linux, a string
    indicating which distribution to use, e.g., "ubuntu22"; OpenVINO has packages for various
    distributions.'
  arch:
    description: 'Auto-detected, only use to override the CPU architecture. One of: x86_64, arm64.
    The architecture selection is limited by what packages OpenVINO publishes'
  apt:
    description: 'Install from APT packages; this is limited to Debian-based Linux and limited
    versions'
    default: false

runs:
  using: composite
  steps:
  - run: npm install
    shell: bash
    working-directory: ${{ github.action_path }}
  - run: node main.js
    shell: bash
    working-directory: ${{ github.action_path }}
    env:
      # Composite actions need to have their inputs forwarded into the environment. See:
      # - documentation (https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#example-specifying-inputs)
      # - associated issue (https://github.com/actions/runner/issues/665)
      INPUT_VERSION: ${{ inputs.version }}
      INPUT_OS: ${{ inputs.os }}
      INPUT_RELEASE: ${{ inputs.release }}
      INPUT_ARCH: ${{ inputs.arch }}
      INPUT_APT: ${{ inputs.apt }}
  - run: |
      source $OPENVINO_INSTALL_DIR/setupvars.sh
      env >> $GITHUB_ENV
    shell: bash
    if: ${{ !startsWith(runner.os, 'windows') }}
  - run: |
      source ${{ env.OPENVINO_INSTALL_DIR }}\setupvars.bat
      env >> $GITHUB_ENV
    shell: bash
    if: startsWith(runner.os, 'windows')
